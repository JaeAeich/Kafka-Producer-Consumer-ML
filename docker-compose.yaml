version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_LISTENERS: 'INTERNAL://:29092,EXTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: create_order:2:1

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: 'no'
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: 'kafka:29092'
      JVM_OPTS: '-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify'
    depends_on:
      - kafka

  # producer-1:
  #   build:
  #     context: ./producer
  #   container_name: producer-1
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   env_file:
  #     - .env
  #   environment:
  #     - CSV_FILE_PATH=./data/ACC_minute_data_with_indicators.csv
  #   volumes:
  #     - ./data:/app/data

  # producer-2:
  #   build:
  #     context: ./producer
  #   container_name: producer-2
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   env_file:
  #     - .env
  #   environment:
  #     - CSV_FILE_PATH=./data/ADANIENT_minute_data_with_indicators.csv
  #   volumes:
  #     - ./data:/app/data